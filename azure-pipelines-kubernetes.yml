# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: InfrastructureAsCode

stages:
  - stage: 
    displayName: 'IaC (Dev)'
    condition: succeeded()
    jobs:
      - job: DeployKubernetes
        displayName: Deploy kubernetes-mkdocs
        steps:
        - task: AzureCLI@2
          displayName: kubernetes-mkdocs
          inputs:
            azureSubscription: feature-flags-dev
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            workingDirectory: $(System.DefaultWorkingDirectory)
            addSpnToEnvironment: true
            inlineScript: |
              az login --service-principal -u ${servicePrincipalId} -p ${servicePrincipalKey} --tenant ${tenantId}
              az aks get-credentials --resource-group feature-flags-cn --name aks-cluster1
              kubectl apply -f kubernetes-mkdocs-appgw.yaml

              
      - job: DeployAzureResources
        # dependsOn: DeployKubernetes
        displayName: 'Deploy Resources'
        steps:
        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'
        - task: Docker@2
          displayName: 'Docker Build&Push'
          inputs:
            containerRegistry: 'agiletoggle'
            repository: 'agile-toggle-mkdocs'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
      
        - task: KubectlInstaller@0
          inputs:
            kubectlVersion: 'latest'
        - task: AzureCLI@2
          displayName: Apply to Kubernetes
          inputs:
            azureSubscription: feature-flags-dev
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            addSpnToEnvironment: true
            inlineScript: |
              az login --service-principal -u ${servicePrincipalId} -p ${servicePrincipalKey} --tenant ${tenantId}
              az aks get-credentials --resource-group feature-flags-cn --name aks-cluster1
              kubectl set image deployment agile-toggle-mkdocs agile-toggle-mkdocs=agiletoggle.azurecr.io/agile-toggle-mkdocs:$(Build.BuildId)
        